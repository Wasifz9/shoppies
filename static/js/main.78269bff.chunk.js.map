{"version":3,"sources":["MovieCard.js","Nominees.js","Loading.gif","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","state","title","director","plot","year","genre","moreInfo","selected","show","handleInfo","bind","handleSelects","revealer","hider","info","fetch","Title","then","res","json","setState","Director","Plot","Year","Genre","this","returnHandler","setTimeout","handleNominations","class","onClick","e","nomineeIDs","className","console","log","includes","imdbID","src","Poster","alt","length","React","Component","Nominees","isOpen","openHandler","nominee","removeNominations","render","nominations","map","removeHandler","apikey","App","callAPI","debounce","value","Array","isArray","Search","items","isLoaded","handleChange","event","target","updateValue","isReturned","isFinished","push","index","indexOf","splice","style","marginBottom","textAlign","fontSize","Response","hasOwnProperty","Type","filter","item","color","isSearched","renderDirections","type","placeholder","onChange","renderItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78269bff.chunk.js","sourcesContent":["import React, {Componont} from 'react';\r\nimport './MovieCard.css';\r\nvar apikey = '&apikey=316355da'\r\n\r\nclass MovieCard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { \r\n            title: '',\r\n            director: '',\r\n            plot:'',\r\n            year:'',\r\n            genre: '',\r\n            moreInfo: false,\r\n            selected: false,\r\n            show: false\r\n        };\r\n       this.handleInfo = this.handleInfo.bind(this);\r\n       this.handleSelects = this.handleSelects.bind(this);\r\n       this.revealer = this.revealer.bind(this);\r\n       this.hider = this.hider.bind(this);\r\n      \r\n      }\r\n\r\n\r\n\r\n    handleInfo(info){\r\n        fetch('https://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n                this.setState({\r\n                    title: json.Title,\r\n                    director:json.Director,\r\n                    plot: json.Plot,\r\n                    year: json.Year,\r\n                    genre: json.Genre,\r\n                    moreInfo: true,\r\n            })\r\n\r\n\r\n        });\r\n    }\r\n    revealer(){\r\n        this.setState({\r\n            show: true\r\n        })\r\n        \r\n    }\r\n\r\n    hider(){\r\n        this.setState({\r\n            show: false\r\n        })\r\n\r\n        this.props.returnHandler();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.returnHandler();\r\n        setTimeout(this.revealer, 10)\r\n    }\r\n    /*componentWillReceiveProps(newProps){\r\n        if(!newProps.item)\r\n            return this.hider();\r\n        else    \r\n            return this.revealer();\r\n        \r\n    }*/\r\n    componentWillUnmount(){\r\n        this.props.returnHandler();\r\n    }\r\n    \r\n    imageHandler(){\r\n    }\r\n\r\n    handleSelects(info){\r\n        this.props.handleNominations(info);\r\n    }\r\n\r\n    renderInfo(info){\r\n        if (this.state.moreInfo == false){\r\n            return (\r\n                <span class = 'more' onClick = {(e) => this.handleInfo(info)}> More</span> \r\n            );\r\n        }else{\r\n            return(\r\n                <div> \r\n                <p class=\"card-info\" >Title: {this.state.title} ({this.state.year}) </p>\r\n                <p class=\"card-info\"> Director: {this.state.director} </p>\r\n                <p class=\"card-info\"> Plot: {this.state.plot} </p>\r\n                <p class=\"card-info\"> Genre: {this.state.genre} </p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const info = this.props.info; \r\n        const nomineeIDs = this.props.nomineeIDs;\r\n       /* fetch('http://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            info = json; \r\n        });*/\r\n\r\n        return (\r\n            <div  >\r\n                <div className = {this.state.show ? \"container-fluid animated animatedFadeInUp fadeInUp\":\"container-fluid\"}>\r\n                    {this.state.show ? console.log('showing') : console.log('not showing')}\r\n                    <div class=\"col-12 mt-3\">\r\n                        <div className = {nomineeIDs.includes(info.imdbID) ? 'selected-card card':'card'} >\r\n                            <div class=\"card-horizontal\">\r\n                                <div class=\"img-square-wrapper\">\r\n                                    <img class=\"poster\" src={info.Poster} alt=\"Card image cap\"></img>\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <p class=\"card-title\"> {info.Title} <br/> </p>\r\n                                    <p className = 'highlighted1'> {info.Year} </p> \r\n                                </div>\r\n                                <div class=\"middle\">\r\n                                        {/*this.renderInfo(info)*/}\r\n                                        <p className = {this.state.moreInfo == false ? 'extraInfoTitle shown':'extraInfoTitle'} >\r\n                                            <span class = 'more' onClick = {(e) => this.handleInfo(info)}> More</span> \r\n                                        </p>\r\n                                        <div className = {this.state.moreInfo ? 'extraInfo shown':'extraInfo'}> \r\n                                            <p class=\"card-info\" > <span className = 'highlighted'>Title:</span> {this.state.title} <span className = 'highlighted'>({this.state.year})</span> <br/>    <span className = 'highlighted'>Director:</span> {this.state.director}   <br/> <span className = 'highlighted'>Plot:</span> {this.state.plot} <br/> <span className = 'highlighted'>Genre:</span> {this.state.genre} </p>\r\n                                        </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div  className = {nomineeIDs.length > 4 ? 'card-footer inactive':'card-footer'}  onClick = {(e) => this.handleSelects(info)}>\r\n                                +\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ); \r\n        \r\n    } \r\n}\r\n\r\nexport default MovieCard; ","import React from 'react';\r\nimport './Nominees.css'\r\nclass Nominees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.openHandler = this.openHandler.bind(this);\r\n    };\r\n    \r\n    openHandler(){\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    removeHandler(nominee){\r\n        this.props.removeNominations(nominee);\r\n        this.render()\r\n    }\r\n\r\n    render(){\r\n        var nominations = this.props.nominations;\r\n        return(\r\n            <div className = 'Nominee'>\r\n                <button className = {this.state.isOpen ? 'selected-opnbtn':'opnbtn'} onClick = {(e)=>this.openHandler()}><span> Favourites ({nominations.length})</span> </button>\r\n                \r\n                \r\n                <div className = {this.state.isOpen ? 'nominationItems show': 'nominationItems'}> \r\n                <p>\r\n                    {nominations.map(nominee => \r\n                    <ul> \r\n                        <li className>\r\n                                {nominee.Title}<br/> \r\n                                ({nominee.Year}) <br/>\r\n                                <button className = 'rmvbtn' onClick = {() => this.removeHandler(nominee)}> remove </button>        \r\n                            <div className = 'divider'></div> \r\n                        </li>\r\n                    </ul>)}\r\n                    </p>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nominees; \r\n","export default __webpack_public_path__ + \"static/media/Loading.6e67c068.gif\";","\nimport './App.css';\nimport React, {Component} from 'react';\nimport MovieCard from './MovieCard.js';\nimport Nominees from './Nominees.js';\nimport loading from './Loading.gif';\nimport { debounce } from 'lodash'\nvar apikey = '&apikey=316355da'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { \n      items: [],\n      isReturned: false,\n      isLoaded: false,\n      isFinished: false,\n      value: \"\",\n      nominations: [],\n      nomineeIDs: [],\n    };\n   this.updateValue = this.updateValue.bind(this);\n   this.callAPI = this.callAPI.bind(this);\n   this.handleChange = this.handleChange.bind(this);\n   this.handleNominations = this.handleNominations.bind(this);\n   this.removeNominations = this.removeNominations.bind(this);\n   this.returnHandler = this.returnHandler.bind(this);\n  }\n\n\n\n  componentDidMount() {\n      fetch('https://www.omdbapi.com/?s=' + this.state.value + apikey)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            isLoaded: true,\n            items: json,\n          })\n        });\n  }\n\n  returnHandler(){\n    this.setState({\n      isReturned: !this.state.isReturned\n    })\n  }\n\n  updateValue(value){\n    this.setState({\n      value: value,\n      isLoaded:false \n    })\n  }\n\n\n  callAPI = debounce( () =>{\n    const {value} = this.state;\n    fetch('https://www.omdbapi.com/?s=' + value + apikey)\n    .then(res => res.json())\n    .then(json => {\n      if (!Array.isArray(json.Search)){\n        fetch('https://www.omdbapi.com/?t=' + value + apikey)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            items: json,\n            isLoaded:true\n          })\n        });\n      } else {\n      this.setState({\n        items: json,\n        isLoaded:true\n      })\n    }    \n    });\n  }, 750);\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.updateValue(value);\n    this.callAPI();\n\n  };\n\n  handleNominations(nominee){\n    this.state.nominations.push(nominee);\n    this.state.nomineeIDs.push(nominee.imdbID);\n    this.setState({ \n      nominations : this.state.nominations,\n      nomineeIDs : this.state.nomineeIDs\n     })\n  }\n\n  removeNominations(nominee){\n    var index = this.state.nominations.indexOf(nominee);\n    this.state.nominations.splice(index,1);\n    index = this.state.nomineeIDs.indexOf(nominee.imdbID);\n    this.state.nomineeIDs.splice(index, 1);\n    this.setState({ \n      nominations : this.state.nominations,\n      nomineeIDs : this.state.nomineeIDs\n     })\n  }\n  \n\n renderItems() {\n    var { items } = this.state;\n    if (this.state.value == ''){\n      return (\n        <div className = 'home1'>\n        <p className = \"resultstext animated animatedFadeInUp fadeInUp\" style = {{ marginBottom: 10 + 'vh', textAlign: 'center', fontSize:28}}>Start typing to find your all-time movies!</p>\n        </div>\n      );\n    } else if (!this.state.isLoaded){\n      return (\n        <div className = 'home1'>\n          <div class=\"loader\"></div>\n        </div>\n      );\n    }\n    else if (items.Response == 'False'){\n      return (\n        <div className = 'home1'>\n          <p className = 'resultstext animated animatedFadeInUp fadeInUp' style = {{ marginBottom: 10 + 'vh', textAlign: 'center'}} >No results...  Try another one?</p>\n        </div>\n      );\n    } else if (items.hasOwnProperty('Plot') && items.Type == 'movie'){\n      return (\n        <div> \n          <MovieCard returnHandler = {this.returnHandler} nomineeIDs = {this.state.nomineeIDs} handleNominations = {this.handleNominations}  info = {this.state.items}/>\n        </div>\n      );\n    }  \n    else if (Array.isArray(items.Search))  {\n      items.Search = items.Search.filter(function (item) {\n        return item.Type === \"movie\";\n      });\n\n      return (  \n        <div> \n          <ul> \n             {this.state.items.Search.map(item => (<MovieCard returnHandler = {this.returnHandler} nomineeIDs = {this.state.nomineeIDs} handleNominations = {this.handleNominations} info = {item}/>))}\n           </ul>\n      </div>\n      );\n    }\n    else {\n      return null;\n  }\n}\n\n  renderDirections(){\n    if (this.state.nomineeIDs.length > 4){\n      return(\n        <p className =\"searchHeadertext\" style = {{color: 'white'}}> Remove to continue. <br/> </p>\n      );\n    }else {\n      return (  \n        <p className =\"searchHeadertext\" > Search! </p>\n      );\n    }\n  }\n\n\n  render () {\n    var { isLoaded, isSearched, isFinished, items} = this.state;\n      return (\n        <div className=\"App\">\n            <div className = { this.state.nomineeIDs.length > 4 ? \"invalid searchHeader\": \"searchHeader\"}>\n              {this.renderDirections()}\n              <input type=\"text\" placeholder = \"search\" value={this.state.value} onChange={this.handleChange}/>\n            </div>\n            <div className = {this.state.isReturned ? 'bigger content':\"normal content\"}>\n              <div className = 'results'>\n              <p className = {this.state.isReturned ? 'container-fluid1 animated animatedFadeInUp fadeInUp':'container-fluid1'}> <span className = 'resultstext'>Results:</span></p>\n                {this.renderItems()}\n              </div>\n              <div className = \"shortlist\">\n                <Nominees removeNominations = {this.removeNominations} nominations = {this.state.nominations}/>\n              </div>\n            </div>\n        </div>\n      );\n    \n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}