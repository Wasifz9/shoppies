{"version":3,"sources":["MovieCard.js","Nominees.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","state","title","director","plot","year","genre","moreInfo","selected","handleInfo","bind","handleSelects","info","fetch","Title","then","res","json","setState","Director","Plot","Year","Genre","this","handleNominations","class","onClick","e","nomineeIDs","className","includes","imdbID","length","src","Poster","alt","renderInfo","style","height","width","React","Component","Nominees","isOpen","openHandler","nominee","removeNominations","render","nominations","map","removeHandler","apikey","App","callAPI","debounce","value","Array","isArray","Search","items","isLoaded","handleChange","event","target","updateValue","isSearched","isFinished","push","index","indexOf","splice","textAlign","fontSize","Response","hasOwnProperty","Type","filter","item","color","borderColor","renderDirections","type","placeholder","onChange","renderItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5bcdf4.chunk.js","sourcesContent":["import React, {Componont} from 'react';\r\nimport './MovieCard.css';\r\nvar apikey = '&apikey=316355da'\r\n\r\nclass MovieCard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { \r\n            title: '',\r\n            director: '',\r\n            plot:'',\r\n            year:'',\r\n            genre: '',\r\n            moreInfo: false,\r\n            selected: false,\r\n            \r\n        };\r\n       this.handleInfo = this.handleInfo.bind(this);\r\n       this.handleSelects = this.handleSelects.bind(this);\r\n      }\r\n\r\n    handleInfo(info){\r\n        fetch('https://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n                this.setState({\r\n                    title: json.Title,\r\n                    director:json.Director,\r\n                    plot: json.Plot,\r\n                    year: json.Year,\r\n                    genre: json.Genre,\r\n                    moreInfo: true\r\n            })\r\n        });\r\n    }\r\n\r\n    handleSelects(info){\r\n        this.setState({\r\n            selected: true\r\n    })\r\n        this.props.handleNominations(info);\r\n    }\r\n\r\n    renderInfo(info){\r\n        if (this.state.moreInfo == false){\r\n            return (\r\n                <p class = 'more' onClick = {(e) => this.handleInfo(info)}>\r\n                    More Information\r\n                </p>\r\n            );\r\n        }else{\r\n            return(\r\n                <div> \r\n                <p class=\"card-info\" >Title: {this.state.title} ({this.state.year}) </p>\r\n                <p class=\"card-info\"> Director: {this.state.director} </p>\r\n                <p class=\"card-info\"> Plot: {this.state.plot} </p>\r\n                <p class=\"card-info\"> Genre: {this.state.genre} </p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const info = this.props.info; \r\n        const nomineeIDs = this.props.nomineeIDs;\r\n       /* fetch('http://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            info = json; \r\n        });*/\r\n        if (!info){\r\n            return <div className = 'card' style= {{height: 150 + 'px', width: '100%'}}></div>\r\n        }\r\n        else{\r\n        return (\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 mt-3\">\r\n                        <div className = {this.state.selected || nomineeIDs.includes(info.imdbID) || nomineeIDs.length > 4 ? 'selected-card':'card'} >\r\n                            <div class=\"card-horizontal\">\r\n                                <div class=\"img-square-wrapper\">\r\n                                    <img class=\"\" src={info.Poster} alt=\"Card image cap\"></img>\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <p class=\"card-title\"> {info.Title} ({info.Year}) </p>\r\n                                    {/* <p class=\"card-text\">{info.Plot}</p>*/}\r\n                                </div>\r\n                                <div class=\"middle\">\r\n                                        {this.renderInfo(info)}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-footer\"  onClick = {(e) => this.handleSelects(info)}>\r\n                                <p> ADD +</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ); \r\n        }\r\n    } \r\n}\r\n\r\nexport default MovieCard; ","import React from 'react';\r\nimport './Nominees.css'\r\nclass Nominees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.openHandler = this.openHandler.bind(this);\r\n    };\r\n    \r\n    openHandler(){\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    removeHandler(nominee){\r\n        this.props.removeNominations(nominee);\r\n        this.render()\r\n    }\r\n\r\n    render(){\r\n        var nominations = this.props.nominations;\r\n        return(\r\n            <div className = 'Nominee'>\r\n                <button className = {this.state.isOpen ? 'selected-opnbtn':'opnbtn'} onClick = {(e)=>this.openHandler()}><span> Shortlist ({nominations.length})</span> </button>\r\n                {this.state.isOpen && \r\n                \r\n                <div className ='nominationItems'> \r\n                    <p>{nominations.map(nominee => <ul> <li> {nominee.Title} <br/> ({nominee.Year}) <br/> <button onClick = {() => this.removeHandler(nominee)}> remove </button> </li> </ul>)}</p>  \r\n                </div>\r\n                \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nominees; \r\n","\nimport './App.css';\nimport React, {Component} from 'react';\nimport MovieCard from './MovieCard.js';\nimport Nominees from './Nominees.js';\nimport { debounce } from 'lodash'\nvar apikey = '&apikey=316355da'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { \n      items: [],\n      isSearched: false,\n      isLoaded: false,\n      isFinished: false,\n      value: \"\",\n      nominations: [],\n      nomineeIDs: [],\n\n    };\n   this.updateValue = this.updateValue.bind(this);\n   this.callAPI = this.callAPI.bind(this);\n   this.handleChange = this.handleChange.bind(this);\n   this.handleNominations = this.handleNominations.bind(this);\n   this.removeNominations = this.removeNominations.bind(this);\n  }\n\n  componentDidMount() {\n      fetch('https://www.omdbapi.com/?s=' + this.state.value + apikey)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            isLoaded: true,\n            items: json,\n          })\n        });\n  }\n\n  updateValue(value){\n    this.setState({\n      value: value,\n      isLoaded:false \n    })\n  }\n\n  callAPI = debounce( () =>{\n    const {value} = this.state;\n    fetch('https://www.omdbapi.com/?s=' + value + apikey)\n    .then(res => res.json())\n    .then(json => {\n      if (!Array.isArray(json.Search)){\n        fetch('https://www.omdbapi.com/?t=' + value + apikey)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            items: json,\n            isLoaded:true\n          })\n        });\n      } else {\n      this.setState({\n        items: json,\n        isLoaded:true\n      })\n    }    \n    });\n  }, 750);\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.updateValue(value);\n    this.callAPI();\n\n  };\n\n  handleNominations(nominee){\n    this.state.nominations.push(nominee);\n    this.state.nomineeIDs.push(nominee.imdbID);\n    this.setState({ \n      nominations : this.state.nominations,\n      nomineeIDs : this.state.nomineeIDs\n     })\n  }\n\n  removeNominations(nominee){\n    var index = this.state.nominations.indexOf(nominee);\n    this.state.nominations.splice(index,1);\n    index = this.state.nomineeIDs.indexOf(nominee.imdbID);\n    this.state.nomineeIDs.splice(index, 1);\n    this.setState({ \n      nominations : this.state.nominations,\n      nomineeIDs : this.state.nomineeIDs\n     })\n  }\n  \n\n renderItems() {\n    var { items } = this.state;\n    if (this.state.value == ''){\n      return (\n        <div className = 'home'>\n        <p className = \"resultstext\" style = {{ textAlign: 'center', fontSize: 22}}>Start typing to find your favourite movies!</p>\n        </div>\n      );\n    } else if (!this.state.isLoaded){\n      return (\n        <div className = 'home'>\n          <p> <span className = 'resultstext'>Loading...</span></p>\n          </div>\n      );\n    }\n    else if (items.Response == 'False'){\n      return null;\n    } else if (items.hasOwnProperty('Plot') && items.Type == 'movie'){\n      return (\n        <div> \n          <p> <span className = 'resultstext'>Results</span></p>\n          <MovieCard nomineeIDs = {this.state.nomineeIDs} handleNominations = {this.handleNominations} info = {this.state.items}/>\n        </div>\n      );\n    }  \n    else if (Array.isArray(items.Search))  {\n      items.Search = items.Search.filter(function (item) {\n        return item.Type === \"movie\";\n      });\n\n      return (  \n        <div> \n          <p> <span className = 'resultstext'>Results</span></p>\n          <ul> \n             {this.state.items.Search.map(item => (<MovieCard nomineeIDs = {this.state.nomineeIDs} handleNominations = {this.handleNominations} info = {item}/>))}\n           </ul>\n      </div>\n      );\n    }\n    else {\n      return null;\n    }\n  }\n\n  renderDirections(){\n    if (this.state.nomineeIDs.length > 4){\n      return(\n        <p className =\"searchHeadertext\" style = {{color: '#e74242', borderColor: '#e74242'}}> >> Your list is full! You can remove a film to continue. <br/> </p>\n      );\n    }else {\n      return (  \n        <p className =\"searchHeadertext\" > >> Search for movies to add to your short list! <br/> </p>\n      );\n    }\n  }\n\n\n  render () {\n    var { isLoaded, isSearched, isFinished, items} = this.state;\n\n\n      return (\n        <div className=\"App\">\n            <div className = \"searchHeader\"> \n              {this.renderDirections()}\n              <input type=\"text\" placeholder = \"search\" value={this.state.value} onChange={this.handleChange}/>\n            </div>\n            <div className = \"content\">\n              <div className = 'results'>\n                {this.renderItems()}\n              </div>\n              <div className = \"shortlist\">\n                <Nominees removeNominations = {this.removeNominations} nominations = {this.state.nominations}/>\n              </div>\n            </div>\n        </div>\n      );\n    \n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}