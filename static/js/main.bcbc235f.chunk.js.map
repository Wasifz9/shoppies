{"version":3,"sources":["MovieCard.js","Nominees.js","Loading.gif","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","state","title","director","plot","year","genre","moreInfo","selected","show","handleInfo","bind","handleSelects","revealer","hider","info","fetch","Title","then","res","json","setState","Director","Plot","Year","Genre","this","returnHandler","setTimeout","handleNominations","class","onClick","e","nomineeIDs","className","includes","imdbID","src","Poster","onerror","length","React","Component","Nominees","isOpen","openHandler","nominee","removeNominations","clearNoms","uri","filename","link","document","createElement","download","href","body","appendChild","click","removeChild","window","open","html2canvas","getElementById","canvas","console","log","toDataURL","nominations","screenShot","clearHandler","map","id","removeHandler","apikey","App","callAPI","debounce","value","Array","isArray","Search","items","isLoaded","handleChange","event","target","updateValue","isReturned","isFinished","push","index","indexOf","splice","style","textAlign","fontSize","Response","hasOwnProperty","Type","filter","item","color","isSearched","renderDirections","type","placeholder","onChange","renderItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bcbc235f.chunk.js","sourcesContent":["import React, {Componont} from 'react';\r\nimport './MovieCard.css';\r\nimport placeHolder from './100x150.png';\r\nvar apikey = '&apikey=316355da'\r\n\r\nclass MovieCard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { \r\n            title: '',\r\n            director: '',\r\n            plot:'',\r\n            year:'',\r\n            genre: '',\r\n            moreInfo: false,\r\n            selected: false,\r\n            show: false\r\n        };\r\n       this.handleInfo = this.handleInfo.bind(this);\r\n       this.handleSelects = this.handleSelects.bind(this);\r\n       this.revealer = this.revealer.bind(this);\r\n       this.hider = this.hider.bind(this);\r\n    \r\n      }\r\n\r\n\r\n\r\n    handleInfo(info){\r\n        fetch('https://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n                this.setState({\r\n                    title: json.Title,\r\n                    director:json.Director,\r\n                    plot: json.Plot,\r\n                    year: json.Year,\r\n                    genre: json.Genre,\r\n                    moreInfo: true,\r\n            })\r\n\r\n\r\n        });\r\n    }\r\n    revealer(){\r\n        this.setState({\r\n            show: true\r\n        })\r\n        \r\n    }\r\n\r\n    hider(){\r\n        this.setState({\r\n            show: false\r\n        })\r\n        this.props.returnHandler();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.returnHandler();\r\n        setTimeout(this.revealer, 10)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.returnHandler();\r\n    }\r\n    \r\n    handleSelects(info){\r\n        this.props.handleNominations(info);\r\n    }\r\n\r\n    renderInfo(info){\r\n        if (this.state.moreInfo == false){\r\n            return (\r\n                <span class = 'more' onClick = {(e) => this.handleInfo(info)}> More</span> \r\n            );\r\n        }else{\r\n            return(\r\n                <div> \r\n                <p class=\"card-info\" >Title: {this.state.title} ({this.state.year}) </p>\r\n                <p class=\"card-info\"> Director: {this.state.director} </p>\r\n                <p class=\"card-info\"> Plot: {this.state.plot} </p>\r\n                <p class=\"card-info\"> Genre: {this.state.genre} </p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const info = this.props.info; \r\n        const nomineeIDs = this.props.nomineeIDs;\r\n\r\n        return (\r\n            <div  >\r\n                <div className = {this.state.show ? \"container-fluid animated animatedFadeInUp fadeInUp\":\"container-fluid\"}>\r\n                    <div class=\"col-12 mt-3\">\r\n                        <div className = {nomineeIDs.includes(info.imdbID) ? 'selected-card card':'card'} >\r\n                            <div class=\"card-horizontal\" onClick = {(e) => this.handleInfo(info)}>\r\n                                <div class=\"img-square-wrapper\">\r\n                                     <img class=\"poster\" src={info.Poster} onerror=\"this.src='100x150.png'; console.log('notworking');\"/>\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <p class=\"card-title\"> {info.Title} <br/> </p>\r\n                                    <p className = 'highlighted1'> {info.Year} </p> \r\n                                </div>\r\n                                <div class=\"middle\">\r\n                                        <p className = {this.state.moreInfo == false ? 'extraInfoTitle shown':'extraInfoTitle'} >\r\n                                            <span class = 'more'> More</span> \r\n                                        </p>\r\n                                        <div className = {this.state.moreInfo ? 'extraInfo shown':'extraInfo'}> \r\n                                            <p class=\"card-info\" > <span className = 'highlighted'>Title:</span> {this.state.title} \r\n                                                                    <span className = 'highlighted'>({this.state.year})</span> <br/>  \r\n                                                                    <span className = 'highlighted'>Director:</span> {this.state.director}   <br/> \r\n                                                                    <span className = 'highlighted'>Plot:</span> {this.state.plot} <br/> \r\n                                                                    <span className = 'highlighted'>Genre:</span> {this.state.genre} \r\n                                            </p>\r\n                                        </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div  className = {nomineeIDs.length > 4 ? 'card-footer inactive':'card-footer'}  onClick = {(e) => this.handleSelects(info)}>\r\n                                +\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ); \r\n        \r\n    } \r\n}\r\n\r\nexport default MovieCard; ","import React from 'react';\r\nimport './Nominees.css'\r\nimport html2canvas from 'html2canvas';\r\nclass Nominees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.openHandler = this.openHandler.bind(this);\r\n    };\r\n    \r\n    openHandler(){\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    removeHandler(nominee){\r\n        this.props.removeNominations(nominee);\r\n    }\r\n    clearHandler(){\r\n        this.props.clearNoms();\r\n    }\r\n    saveAs(uri, filename) {\r\n        var link = document.createElement('a');\r\n        if (typeof link.download === 'string') {\r\n          link.href = uri;\r\n          link.download = filename;\r\n\r\n          //Firefox requires the link to be in the body\r\n          document.body.appendChild(link);\r\n\r\n          //simulate click\r\n          link.click();\r\n\r\n          //remove the link when done\r\n          document.body.removeChild(link);\r\n        } else {\r\n          window.open(uri);\r\n        }\r\n      }\r\n\r\n    screenShot(){\r\n        html2canvas(document.getElementById('shortList')).then(function(canvas) {\r\n            console.log(canvas);    \r\n            var uri = canvas.toDataURL();\r\n            var filename =  'canvas.png';\r\n            var link = document.createElement('a');\r\n            if (typeof link.download === 'string') {\r\n              link.href = uri;\r\n              link.download = filename;\r\n              document.body.appendChild(link);\r\n              link.click();\r\n              document.body.removeChild(link);\r\n            } else {\r\n              window.open(uri);\r\n            }\r\n        });\r\n        \r\n    }\r\n    \r\n\r\n \r\n\r\n   \r\n\r\n    render(){\r\n        var nominations = this.props.nominations;\r\n        return(\r\n            <div className = 'Nominee'>\r\n                <button className = {this.state.isOpen ? 'opnbtn selected-opnbtn':'opnbtn'} onClick = {(e)=>this.openHandler()}><span> Favourites ({nominations.length})</span> </button>\r\n                \r\n                \r\n                <div className = {this.state.isOpen ? 'nominationItems show ': 'nominationItems'}> \r\n                <div className = 'actionButtons'> \r\n                            <button className = 'Sharebtn' onClick = {() => this.screenShot()}> SHARE </button> \r\n                            <button className = 'Clearbtn' onClick = {() => this.clearHandler()}> CLEAR </button>\r\n                </div>\r\n                    {nominations.map(nominee => \r\n                    <ul id = 'faveList' className = 'faveList'> \r\n                        <li className  = 'faveListItem animated animatedFadeInUp fadeInUp'>\r\n                                {nominee.Title}<br/> \r\n                                ({nominee.Year}) <br/>\r\n                                <button className = 'rmvbtn' onClick = {() => this.removeHandler(nominee)}> remove </button>        \r\n                            <div className = 'divider'></div> \r\n                        </li>\r\n                    </ul>)}\r\n  \r\n                  \r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nominees; \r\n","export default __webpack_public_path__ + \"static/media/Loading.6e67c068.gif\";","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport MovieCard from \"./MovieCard.js\";\nimport Nominees from \"./Nominees.js\";\nimport loading from \"./Loading.gif\";\nimport { debounce } from \"lodash\";\nvar apikey = \"&apikey=316355da\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = {\n      items: [],\n      isReturned: false,\n      isLoaded: false,\n      isFinished: false,\n      value: \"\",\n      nominations: [],\n      nomineeIDs: [],\n    };\n    this.updateValue = this.updateValue.bind(this);\n    this.callAPI = this.callAPI.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleNominations = this.handleNominations.bind(this);\n    this.removeNominations = this.removeNominations.bind(this);\n    this.returnHandler = this.returnHandler.bind(this);\n    this.clearNoms = this.clearNoms.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.omdbapi.com/?s=\" + this.state.value + apikey)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n        });\n      });\n  }\n\n  returnHandler() {\n    this.setState({\n      isReturned: !this.state.isReturned,\n    });\n  }\n\n  updateValue(value) {\n    this.setState({\n      value: value,\n      isLoaded: false,\n    });\n  }\n\n  callAPI = debounce(() => {\n    const { value } = this.state;\n    fetch(\"https://www.omdbapi.com/?s=\" + value + apikey)\n      .then((res) => res.json())\n      .then((json) => {\n        if (!Array.isArray(json.Search)) {\n          fetch(\"https://www.omdbapi.com/?t=\" + value + apikey)\n            .then((res) => res.json())\n            .then((json) => {\n              this.setState({\n                items: json,\n                isLoaded: true,\n              });\n            });\n        } else {\n          this.setState({\n            items: json,\n            isLoaded: true,\n          });\n        }\n      });\n  }, 750);\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    this.updateValue(value);\n    this.callAPI();\n  };\n\n  handleNominations(nominee) {\n    this.state.nominations.push(nominee);\n    this.state.nomineeIDs.push(nominee.imdbID);\n    this.setState({\n      nominations: this.state.nominations,\n      nomineeIDs: this.state.nomineeIDs,\n    });\n  }\n\n  removeNominations(nominee) {\n    var index = this.state.nominations.indexOf(nominee);\n    this.state.nominations.splice(index, 1);\n    index = this.state.nomineeIDs.indexOf(nominee.imdbID);\n    this.state.nomineeIDs.splice(index, 1);\n    this.setState({\n      nominations: this.state.nominations,\n      nomineeIDs: this.state.nomineeIDs,\n    });\n  }\n\n  clearNoms() {\n    this.setState({\n      nominations: [],\n      nomineeIDs: [],\n    });\n  }\n\n  renderItems() {\n    var { items } = this.state;\n    if (this.state.value == \"\") {\n      return (\n        <div className=\"home1\">\n          <p\n            className=\"resultstext animated animatedFadeInUp fadeInUp\"\n            style={{ textAlign: \"center\", fontSize: 28 }}\n          >\n            Start typing to find your all-time movies!\n          </p>\n        </div>\n      );\n    } else if (!this.state.isLoaded) {\n      return (\n        <div className=\"home1\">\n          <div class=\"loader\"></div>\n        </div>\n      );\n    } else if (items.Response == \"False\") {\n      return (\n        <div className=\"home1\">\n          <p\n            className=\"resultstext animated animatedFadeInUp fadeInUp\"\n            style={{ textAlign: \"center\" }}\n          >\n            No results... Try another one?\n          </p>\n        </div>\n      );\n    } else if (items.hasOwnProperty(\"Plot\") && items.Type == \"movie\") {\n      return (\n        <div id=\"to screenshot\">\n          <MovieCard\n            returnHandler={this.returnHandler}\n            nomineeIDs={this.state.nomineeIDs}\n            handleNominations={this.handleNominations}\n            info={this.state.items}\n          />\n        </div>\n      );\n    } else if (Array.isArray(items.Search)) {\n      items.Search = items.Search.filter(function (item) {\n        return item.Type === \"movie\";\n      });\n\n      return (\n        <div id=\"to screenshot\">\n          <ul id=\"cardList\" className=\"cardList\">\n            {this.state.items.Search.map((item) => (\n              <MovieCard\n                returnHandler={this.returnHandler}\n                nomineeIDs={this.state.nomineeIDs}\n                handleNominations={this.handleNominations}\n                info={item}\n              />\n            ))}\n          </ul>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"home1\">\n          <p\n            className=\"resultstext animated animatedFadeInUp fadeInUp\"\n            style={{ textAlign: \"center\" }}\n          >\n            No results... Try another one?\n          </p>\n        </div>\n      );\n    }\n  }\n\n  renderDirections() {\n    if (this.state.nomineeIDs.length > 4) {\n      return (\n        <p className=\"searchHeadertext\" style={{ color: \"white\" }}>\n          {\" \"}\n          Remove to continue. <br />{\" \"}\n        </p>\n      );\n    } else {\n      return <p className=\"searchHeadertext\"> Search! </p>;\n    }\n  }\n\n  render() {\n    var { isLoaded, isSearched, isFinished, items } = this.state;\n    return (\n      <div id=\"App\" className=\"App\">\n        <div\n          className={\n            this.state.nomineeIDs.length > 4\n              ? \"invalid searchHeader\"\n              : \"searchHeader\"\n          }\n        >\n          {this.renderDirections()}\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div\n          className={\n            this.state.isReturned\n              ? \"content extraspace\"\n              : \"content\"\n          }\n        >\n          <div id=\"resultsPage\" className=\"results\">\n            <p\n              className={\n                this.state.isReturned\n                  ? \"animated animatedFadeInUp fadeInUp\"\n                  : \"container-fluid1\"\n              }\n            >\n              <span className=\"resultstext\">Results:</span>\n            </p>\n            {this.renderItems()}\n          </div>\n          <div id=\"shortList\" className=\"shortlist\">\n            <Nominees\n              clearNoms={this.clearNoms}\n              removeNominations={this.removeNominations}\n              nominations={this.state.nominations}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}