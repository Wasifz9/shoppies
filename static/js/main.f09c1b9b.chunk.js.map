{"version":3,"sources":["MovieCard.js","Nominees.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","state","title","director","plot","year","genre","moreInfo","selected","handleInfo","bind","handleSelects","info","fetch","Title","then","res","json","setState","Director","Plot","Year","Genre","this","class","onClick","e","className","src","Poster","alt","renderInfo","React","Component","Nominees","isOpen","openHandler","nominations","length","apikey","App","handleChange","event","value","target","Array","isArray","Search","items","isSearched","isLoaded","isFinished","style","color","fontWeight","textAlign","Response","hasOwnProperty","Type","filter","item","map","type","placeholder","onChange","renderItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f09c1b9b.chunk.js","sourcesContent":["import React, {Componont} from 'react';\r\nimport './MovieCard.css';\r\nvar apikey = '&apikey=316355da'\r\n\r\nclass MovieCard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { \r\n            title: '',\r\n            director: '',\r\n            plot:'',\r\n            year:'',\r\n            genre: '',\r\n            moreInfo: false,\r\n            selected: false,\r\n        };\r\n       this.handleInfo = this.handleInfo.bind(this);\r\n       this.handleSelects = this.handleSelects.bind(this);\r\n      }\r\n\r\n    handleInfo(info){\r\n        fetch('http://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n                this.setState({\r\n                    title: json.Title,\r\n                    director:json.Director,\r\n                    plot: json.Plot,\r\n                    year: json.Year,\r\n                    genre: json.Genre,\r\n                    moreInfo: true\r\n            })\r\n        });\r\n    }\r\n\r\n    handleSelects(){\r\n        this.setState({\r\n            selected: true\r\n        })\r\n    }\r\n\r\n    renderInfo(info){\r\n        if (this.state.moreInfo == false){\r\n            return (\r\n                <p class = 'more' onClick = {(e) => this.handleInfo(info)}>\r\n                    More Information\r\n                </p>\r\n            );\r\n        }else{\r\n            return(\r\n                <div> \r\n                <p class=\"card-info\" >Title: {this.state.title} ({this.state.year}) </p>\r\n                <p class=\"card-info\"> Director: {this.state.director} </p>\r\n                <p class=\"card-info\"> Plot: {this.state.plot} </p>\r\n                <p class=\"card-info\"> Genre: {this.state.genre} </p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const info = this.props.info; \r\n       /* fetch('http://www.omdbapi.com/?t=' + info.Title + apikey)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            info = json; \r\n        });*/\r\n\r\n        return (\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 mt-3\">\r\n                        <div className = {this.state.selected ? 'selected-card':'card'} >\r\n                            <div class=\"card-horizontal\">\r\n                                <div class=\"img-square-wrapper\">\r\n                                    <img class=\"\" src={info.Poster} alt=\"Card image cap\"></img>\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <p class=\"card-title\"> {info.Title} ({info.Year}) </p>\r\n                                    {/* <p class=\"card-text\">{info.Plot}</p>*/}\r\n                                </div>\r\n                                <div class=\"middle\">\r\n                                        {this.renderInfo(info)}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-footer\"  onClick = {(e) => this.handleSelects(info)}>\r\n                                <p> ADD +</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ); \r\n    } \r\n}\r\n\r\nexport default MovieCard; ","import React from 'react';\r\nimport './Nominees.css'\r\nclass Nominees extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n\r\n        this.openHandler = this.openHandler.bind(this);\r\n    };\r\n    \r\n    openHandler(){\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        })\r\n    }\r\n\r\n    render(){\r\n        var nominations = this.props.nominations;\r\n        return(\r\n            <div className = 'Nominee'>\r\n                <button className = 'opnbtn' onClick = {(e)=>this.openHandler()}>Shortlist ({nominations.length}) </button>\r\n                {this.state.isOpen && <div> <p>Gay</p> <p>Gay</p><p>Gay</p><p>Gay</p><p>Gay</p><p>Gay</p><p>Gay</p><p>Gay</p><p>Gay</p> </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nominees; \r\n","\nimport './App.css';\nimport React, {Component} from 'react';\nimport MovieCard from './MovieCard.js';\nimport Nominees from './Nominees.js';\nvar apikey = '&apikey=316355da'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { \n      items: [],\n      isSearched: false,\n      isLoaded: false,\n      isFinished: false,\n      value: \"\",\n      nominations: [1,2]\n    };\n   this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n      fetch('http://www.omdbapi.com/?s=' + this.state.value + apikey)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            isLoaded: true,\n            items: json,\n          })\n        });\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    fetch('http://www.omdbapi.com/?s=' + value + apikey)\n    .then(res => res.json())\n    .then(json => {\n      if (!Array.isArray(json.Search)){\n        fetch('http://www.omdbapi.com/?t=' + value + apikey)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({\n            items: json,\n            value: value,\n          })\n        });\n      } else {\n      this.setState({\n        items: json,\n        value: value, \n      })\n\n    }\n    \n    \n    });\n\n    /*if (this.state.items.hasOwnProperty('Response') && this.state.items.Response == 'False'){\n      fetch('http://www.omdbapi.com/?t=' + value + apikey)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          items: json,\n        })\n      });\n    }*/\n  }\n\n renderItems() {\n    var { items } = this.state;\n    if (this.state.value == ''){\n      return (\n        <p className = \"searchHeadertext\" style = {{color:'#101318', fontWeight: 'bold', textAlign: 'center'}}>Start typing to find your favourite movies!</p>\n      );\n    }\n    else if (items.Response == 'False'){\n      return null;\n    } else if (items.hasOwnProperty('Plot') && items.Type == 'movie'){\n      return (\n        <div> \n          <p className = \"searchHeadertext\" style = {{color:'#101318', fontWeight: 'bold'}}>Results</p>\n          <MovieCard info = {this.state.items}/>\n        </div>\n      );\n    }  \n    else if (Array.isArray(items.Search))  {\n      items.Search = items.Search.filter(function (item) {\n        return item.Type === \"movie\";\n      });\n\n      return (  \n        <div> \n          <p className = \"searchHeadertext\" style = {{color:'#101318', fontWeight: 'bold'}}>Results</p>\n          <ul> \n             {this.state.items.Search.map(item => (<MovieCard info = {item}/>))}\n           </ul>\n      </div>\n      );\n    }\n    else {\n      return null;\n    }\n  }\n\n\n  render () {\n    var { isLoaded, isSearched, isFinished, items} = this.state;\n    if (!isLoaded){\n      return <div>Loading........</div>\n    }\n    else {\n      return (\n        <div className=\"App\">\n            <div className = \"searchHeader\"> \n              <p className = \"searchHeadertext\" >Search for movies to add to your short list!</p>\n              <input type=\"text\" placeholder = \"search\" value={this.state.value} onChange={this.handleChange}/>\n            </div>\n            <div className = \"content\">\n              <div className = 'results'>\n                {this.renderItems()}\n              </div>\n              <div className = \"shortlist\">\n                <Nominees nominations = {this.state.nominations}/>\n              </div>\n            </div>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}